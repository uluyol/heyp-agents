common --incompatible_require_linker_input_cc_api=false

# Pass PATH, CC, CXX and LLVM_CONFIG variables from the environment.
build --action_env=CC
build --action_env=CXX
build --action_env=LLVM_CONFIG
build --action_env=PATH

# We already have absl in the build, define absl=1 to tell googletest to use absl for backtrace.
build --define absl=1

build --cxxopt=-std=c++17
build --action_env=CFLAGS=-fno-omit-frame-pointer
build --action_env=CXXFLAGS=-fno-omit-frame-pointer

# Unhelpful warning: warns if we copy a pair of ints instead of taking a reference
build --action_env=CFLAGS=-Wno-range-loop-construct
build --action_env=CXXFLAGS=-Wno-range-loop-construct

build:libc++ --action_env=BAZEL_COMPILER=clang
build:libc++ --linkopt=-fuse-ld=lld
build:libc++ --action_env=CXXFLAGS=-stdlib=libc++
build:libc++ --action_env=LDFLAGS=-stdlib=libc++
build:libc++ --action_env=BAZEL_CXXOPTS=-stdlib=libc++
build:libc++ --action_env=BAZEL_LINKLIBS=-l%:libc++.a:-l%:libc++abi.a
build:libc++ --action_env=BAZEL_LINKOPTS=-lm:-pthread
build:libc++ --define force_libcpp=enabled

build:clang-opt -c opt
build:clang-opt --config=libc++

build:clang-dbg -c dbg
build:clang-dbg --config=libc++

build:clang-asan -c dbg
build:clang-asan --strip=never
build:clang-asan --copt -fsanitize=address
build:clang-asan --copt -DADDRESS_SANITIZER
build:clang-asan --copt -DLEAK_SANITIZER
build:clang-asan --copt -O1
build:clang-asan --copt -g
build:clang-asan --copt -fno-omit-frame-pointer
build:clang-asan --linkopt -fsanitize=address
build:clang-asan --config=libc++
build:clang-asan --test_env=ASAN_SYMBOLIZER_PATH
build:clang-asan --//heyp:debug=sanitizer

build:clang-tsan -c dbg
build:clang-tsan --strip=never
build:clang-tsan --copt -fsanitize=thread
build:clang-tsan --copt -DADDRESS_SANITIZER
build:clang-tsan --copt -O1
build:clang-tsan --copt -g
build:clang-tsan --copt -fno-omit-frame-pointer
build:clang-tsan --linkopt -fsanitize=thread
# This is needed to address false positive problem with abseil.
# https://github.com/google/sanitizers/issues/953
build:clang-tsan --test_env=TSAN_OPTIONS=report_atomic_races=0
build:clang-tsan --config=libc++
build:clang-tsan --//heyp:debug=sanitizer

build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

build:macos-asan --config=asan
# Workaround, see https://github.com/bazelbuild/bazel/issues/6932
build:macos-asan --copt -Wno-macro-redefined
build:macos-asan --copt -D_FORTIFY_SOURCE=0
# Workaround, see https://github.com/bazelbuild/bazel/issues/4341
build:macos-asan --copt -DGRPC_BAZEL_BUILD
# Dynamic link cause issues like: `dyld: malformed mach-o: load commands size (59272) > 32768`
build:macos-asan --dynamic_mode=off
