// This file contains definitions of all configuration protos.
// These messages should only be stored in textual or in-memory form (i.e. not
// the binary format), so feed free to change any field numbers.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: heyp/proto/app.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoadGenerator int32

const (
	LoadGenerator_LG_UNSET     LoadGenerator = 0
	LoadGenerator_LG_OPEN      LoadGenerator = 1
	LoadGenerator_LG_SEMI_OPEN LoadGenerator = 2
)

// Enum value maps for LoadGenerator.
var (
	LoadGenerator_name = map[int32]string{
		0: "LG_UNSET",
		1: "LG_OPEN",
		2: "LG_SEMI_OPEN",
	}
	LoadGenerator_value = map[string]int32{
		"LG_UNSET":     0,
		"LG_OPEN":      1,
		"LG_SEMI_OPEN": 2,
	}
)

func (x LoadGenerator) Enum() *LoadGenerator {
	p := new(LoadGenerator)
	*p = x
	return p
}

func (x LoadGenerator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoadGenerator) Descriptor() protoreflect.EnumDescriptor {
	return file_heyp_proto_app_proto_enumTypes[0].Descriptor()
}

func (LoadGenerator) Type() protoreflect.EnumType {
	return &file_heyp_proto_app_proto_enumTypes[0]
}

func (x LoadGenerator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoadGenerator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoadGenerator(num)
	return nil
}

// Deprecated: Use LoadGenerator.Descriptor instead.
func (LoadGenerator) EnumDescriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{0}
}

type Distribution int32

const (
	Distribution_DIST_UNSET       Distribution = 0
	Distribution_DIST_CONSTANT    Distribution = 1
	Distribution_DIST_UNIFORM     Distribution = 2
	Distribution_DIST_EXPONENTIAL Distribution = 3
)

// Enum value maps for Distribution.
var (
	Distribution_name = map[int32]string{
		0: "DIST_UNSET",
		1: "DIST_CONSTANT",
		2: "DIST_UNIFORM",
		3: "DIST_EXPONENTIAL",
	}
	Distribution_value = map[string]int32{
		"DIST_UNSET":       0,
		"DIST_CONSTANT":    1,
		"DIST_UNIFORM":     2,
		"DIST_EXPONENTIAL": 3,
	}
)

func (x Distribution) Enum() *Distribution {
	p := new(Distribution)
	*p = x
	return p
}

func (x Distribution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Distribution) Descriptor() protoreflect.EnumDescriptor {
	return file_heyp_proto_app_proto_enumTypes[1].Descriptor()
}

func (Distribution) Type() protoreflect.EnumType {
	return &file_heyp_proto_app_proto_enumTypes[1]
}

func (x Distribution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Distribution) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Distribution(num)
	return nil
}

// Deprecated: Use Distribution.Descriptor instead.
func (Distribution) EnumDescriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1}
}

type TestLopriClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoadGen        *LoadGenerator                         `protobuf:"varint,1,opt,name=load_gen,json=loadGen,enum=heyp.proto.LoadGenerator" json:"load_gen,omitempty"`
	NumConns       *int32                                 `protobuf:"varint,2,opt,name=num_conns,json=numConns,def=20" json:"num_conns,omitempty"`
	WorkloadStages []*TestLopriClientConfig_WorkloadStage `protobuf:"bytes,3,rep,name=workload_stages,json=workloadStages" json:"workload_stages,omitempty"`
}

// Default values for TestLopriClientConfig fields.
const (
	Default_TestLopriClientConfig_NumConns = int32(20)
)

func (x *TestLopriClientConfig) Reset() {
	*x = TestLopriClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestLopriClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestLopriClientConfig) ProtoMessage() {}

func (x *TestLopriClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestLopriClientConfig.ProtoReflect.Descriptor instead.
func (*TestLopriClientConfig) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{0}
}

func (x *TestLopriClientConfig) GetLoadGen() LoadGenerator {
	if x != nil && x.LoadGen != nil {
		return *x.LoadGen
	}
	return LoadGenerator_LG_UNSET
}

func (x *TestLopriClientConfig) GetNumConns() int32 {
	if x != nil && x.NumConns != nil {
		return *x.NumConns
	}
	return Default_TestLopriClientConfig_NumConns
}

func (x *TestLopriClientConfig) GetWorkloadStages() []*TestLopriClientConfig_WorkloadStage {
	if x != nil {
		return x.WorkloadStages
	}
	return nil
}

type FortioClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumShards        *int32                               `protobuf:"varint,1,opt,name=num_shards,json=numShards,def=4" json:"num_shards,omitempty"`
	NumConns         *int32                               `protobuf:"varint,2,opt,name=num_conns,json=numConns,def=20" json:"num_conns,omitempty"`
	WorkloadStages   []*FortioClientConfig_WorkloadStage  `protobuf:"bytes,3,rep,name=workload_stages,json=workloadStages" json:"workload_stages,omitempty"`
	SizeDist         []*FortioClientConfig_SizeAndWeight  `protobuf:"bytes,4,rep,name=size_dist,json=sizeDist" json:"size_dist,omitempty"`
	DelayDist        []*FortioClientConfig_DelayAndWeight `protobuf:"bytes,5,rep,name=delay_dist,json=delayDist" json:"delay_dist,omitempty"`
	JitterOn         *bool                                `protobuf:"varint,10,opt,name=jitter_on,json=jitterOn,def=1" json:"jitter_on,omitempty"`
	DurResolutionSec *float64                             `protobuf:"fixed64,11,opt,name=dur_resolution_sec,json=durResolutionSec,def=0.001" json:"dur_resolution_sec,omitempty"` // default ms resolution
	HttpOptions      *FortioClientConfig_HttpOptions      `protobuf:"bytes,12,opt,name=http_options,json=httpOptions" json:"http_options,omitempty"`
}

// Default values for FortioClientConfig fields.
const (
	Default_FortioClientConfig_NumShards        = int32(4)
	Default_FortioClientConfig_NumConns         = int32(20)
	Default_FortioClientConfig_JitterOn         = bool(true)
	Default_FortioClientConfig_DurResolutionSec = float64(0.001)
)

func (x *FortioClientConfig) Reset() {
	*x = FortioClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortioClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortioClientConfig) ProtoMessage() {}

func (x *FortioClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortioClientConfig.ProtoReflect.Descriptor instead.
func (*FortioClientConfig) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1}
}

func (x *FortioClientConfig) GetNumShards() int32 {
	if x != nil && x.NumShards != nil {
		return *x.NumShards
	}
	return Default_FortioClientConfig_NumShards
}

func (x *FortioClientConfig) GetNumConns() int32 {
	if x != nil && x.NumConns != nil {
		return *x.NumConns
	}
	return Default_FortioClientConfig_NumConns
}

func (x *FortioClientConfig) GetWorkloadStages() []*FortioClientConfig_WorkloadStage {
	if x != nil {
		return x.WorkloadStages
	}
	return nil
}

func (x *FortioClientConfig) GetSizeDist() []*FortioClientConfig_SizeAndWeight {
	if x != nil {
		return x.SizeDist
	}
	return nil
}

func (x *FortioClientConfig) GetDelayDist() []*FortioClientConfig_DelayAndWeight {
	if x != nil {
		return x.DelayDist
	}
	return nil
}

func (x *FortioClientConfig) GetJitterOn() bool {
	if x != nil && x.JitterOn != nil {
		return *x.JitterOn
	}
	return Default_FortioClientConfig_JitterOn
}

func (x *FortioClientConfig) GetDurResolutionSec() float64 {
	if x != nil && x.DurResolutionSec != nil {
		return *x.DurResolutionSec
	}
	return Default_FortioClientConfig_DurResolutionSec
}

func (x *FortioClientConfig) GetHttpOptions() *FortioClientConfig_HttpOptions {
	if x != nil {
		return x.HttpOptions
	}
	return nil
}

type TestLopriClientConfig_WorkloadStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpcSizeBytes     *int32        `protobuf:"varint,1,opt,name=rpc_size_bytes,json=rpcSizeBytes,def=4096" json:"rpc_size_bytes,omitempty"`
	TargetAverageBps *float64      `protobuf:"fixed64,2,opt,name=target_average_bps,json=targetAverageBps,def=1e+07" json:"target_average_bps,omitempty"`
	InterarrivalDist *Distribution `protobuf:"varint,3,opt,name=interarrival_dist,json=interarrivalDist,enum=heyp.proto.Distribution,def=3" json:"interarrival_dist,omitempty"`
	RunDur           *string       `protobuf:"bytes,4,opt,name=run_dur,json=runDur,def=30s" json:"run_dur,omitempty"`
}

// Default values for TestLopriClientConfig_WorkloadStage fields.
const (
	Default_TestLopriClientConfig_WorkloadStage_RpcSizeBytes     = int32(4096)
	Default_TestLopriClientConfig_WorkloadStage_TargetAverageBps = float64(1e+07)
	Default_TestLopriClientConfig_WorkloadStage_InterarrivalDist = Distribution_DIST_EXPONENTIAL
	Default_TestLopriClientConfig_WorkloadStage_RunDur           = string("30s")
)

func (x *TestLopriClientConfig_WorkloadStage) Reset() {
	*x = TestLopriClientConfig_WorkloadStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestLopriClientConfig_WorkloadStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestLopriClientConfig_WorkloadStage) ProtoMessage() {}

func (x *TestLopriClientConfig_WorkloadStage) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestLopriClientConfig_WorkloadStage.ProtoReflect.Descriptor instead.
func (*TestLopriClientConfig_WorkloadStage) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestLopriClientConfig_WorkloadStage) GetRpcSizeBytes() int32 {
	if x != nil && x.RpcSizeBytes != nil {
		return *x.RpcSizeBytes
	}
	return Default_TestLopriClientConfig_WorkloadStage_RpcSizeBytes
}

func (x *TestLopriClientConfig_WorkloadStage) GetTargetAverageBps() float64 {
	if x != nil && x.TargetAverageBps != nil {
		return *x.TargetAverageBps
	}
	return Default_TestLopriClientConfig_WorkloadStage_TargetAverageBps
}

func (x *TestLopriClientConfig_WorkloadStage) GetInterarrivalDist() Distribution {
	if x != nil && x.InterarrivalDist != nil {
		return *x.InterarrivalDist
	}
	return Default_TestLopriClientConfig_WorkloadStage_InterarrivalDist
}

func (x *TestLopriClientConfig_WorkloadStage) GetRunDur() string {
	if x != nil && x.RunDur != nil {
		return *x.RunDur
	}
	return Default_TestLopriClientConfig_WorkloadStage_RunDur
}

type FortioClientConfig_SizeAndWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespSizeBytes *int32 `protobuf:"varint,1,opt,name=resp_size_bytes,json=respSizeBytes" json:"resp_size_bytes,omitempty"`
	Weight        *int32 `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"` // should add up to 100
}

func (x *FortioClientConfig_SizeAndWeight) Reset() {
	*x = FortioClientConfig_SizeAndWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortioClientConfig_SizeAndWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortioClientConfig_SizeAndWeight) ProtoMessage() {}

func (x *FortioClientConfig_SizeAndWeight) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortioClientConfig_SizeAndWeight.ProtoReflect.Descriptor instead.
func (*FortioClientConfig_SizeAndWeight) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FortioClientConfig_SizeAndWeight) GetRespSizeBytes() int32 {
	if x != nil && x.RespSizeBytes != nil {
		return *x.RespSizeBytes
	}
	return 0
}

func (x *FortioClientConfig_SizeAndWeight) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type FortioClientConfig_DelayAndWeight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DelayDur *string `protobuf:"bytes,1,opt,name=delay_dur,json=delayDur" json:"delay_dur,omitempty"` // durations
	Weight   *int32  `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`                    // should app up to 100
}

func (x *FortioClientConfig_DelayAndWeight) Reset() {
	*x = FortioClientConfig_DelayAndWeight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortioClientConfig_DelayAndWeight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortioClientConfig_DelayAndWeight) ProtoMessage() {}

func (x *FortioClientConfig_DelayAndWeight) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortioClientConfig_DelayAndWeight.ProtoReflect.Descriptor instead.
func (*FortioClientConfig_DelayAndWeight) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FortioClientConfig_DelayAndWeight) GetDelayDur() string {
	if x != nil && x.DelayDur != nil {
		return *x.DelayDur
	}
	return ""
}

func (x *FortioClientConfig_DelayAndWeight) GetWeight() int32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type FortioClientConfig_WorkloadStage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetAverageBps *float64 `protobuf:"fixed64,1,opt,name=target_average_bps,json=targetAverageBps" json:"target_average_bps,omitempty"`
	RunDur           *string  `protobuf:"bytes,2,opt,name=run_dur,json=runDur,def=30s" json:"run_dur,omitempty"`
}

// Default values for FortioClientConfig_WorkloadStage fields.
const (
	Default_FortioClientConfig_WorkloadStage_RunDur = string("30s")
)

func (x *FortioClientConfig_WorkloadStage) Reset() {
	*x = FortioClientConfig_WorkloadStage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortioClientConfig_WorkloadStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortioClientConfig_WorkloadStage) ProtoMessage() {}

func (x *FortioClientConfig_WorkloadStage) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortioClientConfig_WorkloadStage.ProtoReflect.Descriptor instead.
func (*FortioClientConfig_WorkloadStage) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1, 2}
}

func (x *FortioClientConfig_WorkloadStage) GetTargetAverageBps() float64 {
	if x != nil && x.TargetAverageBps != nil {
		return *x.TargetAverageBps
	}
	return 0
}

func (x *FortioClientConfig_WorkloadStage) GetRunDur() string {
	if x != nil && x.RunDur != nil {
		return *x.RunDur
	}
	return Default_FortioClientConfig_WorkloadStage_RunDur
}

type FortioClientConfig_HttpOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseFastClient    *bool   `protobuf:"varint,1,opt,name=use_fast_client,json=useFastClient,def=1" json:"use_fast_client,omitempty"`
	UseKeepAlive     *bool   `protobuf:"varint,2,opt,name=use_keep_alive,json=useKeepAlive,def=1" json:"use_keep_alive,omitempty"`
	AllowHalfClose   *bool   `protobuf:"varint,3,opt,name=allow_half_close,json=allowHalfClose,def=0" json:"allow_half_close,omitempty"`
	CompressionOn    *bool   `protobuf:"varint,4,opt,name=compression_on,json=compressionOn,def=0" json:"compression_on,omitempty"`
	ReqTimeoutDur    *string `protobuf:"bytes,5,opt,name=req_timeout_dur,json=reqTimeoutDur,def=3s" json:"req_timeout_dur,omitempty"`
	AllowInsecureTls *bool   `protobuf:"varint,6,opt,name=allow_insecure_tls,json=allowInsecureTls,def=0" json:"allow_insecure_tls,omitempty"`
	ContentType      *string `protobuf:"bytes,7,opt,name=content_type,json=contentType,def=" json:"content_type,omitempty"`
	Payload          *string `protobuf:"bytes,8,opt,name=payload" json:"payload,omitempty"`
	FollowRedirects  *bool   `protobuf:"varint,9,opt,name=follow_redirects,json=followRedirects,def=0" json:"follow_redirects,omitempty"` // incompatible with use_fast_client
}

// Default values for FortioClientConfig_HttpOptions fields.
const (
	Default_FortioClientConfig_HttpOptions_UseFastClient    = bool(true)
	Default_FortioClientConfig_HttpOptions_UseKeepAlive     = bool(true)
	Default_FortioClientConfig_HttpOptions_AllowHalfClose   = bool(false)
	Default_FortioClientConfig_HttpOptions_CompressionOn    = bool(false)
	Default_FortioClientConfig_HttpOptions_ReqTimeoutDur    = string("3s")
	Default_FortioClientConfig_HttpOptions_AllowInsecureTls = bool(false)
	Default_FortioClientConfig_HttpOptions_ContentType      = string("")
	Default_FortioClientConfig_HttpOptions_FollowRedirects  = bool(false)
)

func (x *FortioClientConfig_HttpOptions) Reset() {
	*x = FortioClientConfig_HttpOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FortioClientConfig_HttpOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FortioClientConfig_HttpOptions) ProtoMessage() {}

func (x *FortioClientConfig_HttpOptions) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FortioClientConfig_HttpOptions.ProtoReflect.Descriptor instead.
func (*FortioClientConfig_HttpOptions) Descriptor() ([]byte, []int) {
	return file_heyp_proto_app_proto_rawDescGZIP(), []int{1, 3}
}

func (x *FortioClientConfig_HttpOptions) GetUseFastClient() bool {
	if x != nil && x.UseFastClient != nil {
		return *x.UseFastClient
	}
	return Default_FortioClientConfig_HttpOptions_UseFastClient
}

func (x *FortioClientConfig_HttpOptions) GetUseKeepAlive() bool {
	if x != nil && x.UseKeepAlive != nil {
		return *x.UseKeepAlive
	}
	return Default_FortioClientConfig_HttpOptions_UseKeepAlive
}

func (x *FortioClientConfig_HttpOptions) GetAllowHalfClose() bool {
	if x != nil && x.AllowHalfClose != nil {
		return *x.AllowHalfClose
	}
	return Default_FortioClientConfig_HttpOptions_AllowHalfClose
}

func (x *FortioClientConfig_HttpOptions) GetCompressionOn() bool {
	if x != nil && x.CompressionOn != nil {
		return *x.CompressionOn
	}
	return Default_FortioClientConfig_HttpOptions_CompressionOn
}

func (x *FortioClientConfig_HttpOptions) GetReqTimeoutDur() string {
	if x != nil && x.ReqTimeoutDur != nil {
		return *x.ReqTimeoutDur
	}
	return Default_FortioClientConfig_HttpOptions_ReqTimeoutDur
}

func (x *FortioClientConfig_HttpOptions) GetAllowInsecureTls() bool {
	if x != nil && x.AllowInsecureTls != nil {
		return *x.AllowInsecureTls
	}
	return Default_FortioClientConfig_HttpOptions_AllowInsecureTls
}

func (x *FortioClientConfig_HttpOptions) GetContentType() string {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return Default_FortioClientConfig_HttpOptions_ContentType
}

func (x *FortioClientConfig_HttpOptions) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

func (x *FortioClientConfig_HttpOptions) GetFollowRedirects() bool {
	if x != nil && x.FollowRedirects != nil {
		return *x.FollowRedirects
	}
	return Default_FortioClientConfig_HttpOptions_FollowRedirects
}

var File_heyp_proto_app_proto protoreflect.FileDescriptor

var file_heyp_proto_app_proto_rawDesc = []byte{
	0x0a, 0x14, 0x68, 0x65, 0x79, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb5, 0x03, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x70, 0x72, 0x69,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x08,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x61, 0x64,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6c, 0x6f, 0x61, 0x64, 0x47,
	0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x32, 0x30, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x43, 0x6f,
	0x6e, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68,
	0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x6f,
	0x70, 0x72, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x1a, 0xea, 0x01,
	0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x0e, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x04, 0x34, 0x30, 0x39, 0x36, 0x52, 0x0c, 0x72,
	0x70, 0x63, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x12, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x70,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x08, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x42, 0x70, 0x73, 0x12, 0x57, 0x0a, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x10, 0x44, 0x49, 0x53, 0x54, 0x5f, 0x45,
	0x58, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x52, 0x10, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07,
	0x72, 0x75, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x03, 0x33,
	0x30, 0x73, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x44, 0x75, 0x72, 0x22, 0xfe, 0x08, 0x0a, 0x12, 0x46,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x20, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x34, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x32, 0x30, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x43,
	0x6f, 0x6e, 0x6e, 0x73, 0x12, 0x55, 0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x09, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53,
	0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x08, 0x73, 0x69,
	0x7a, 0x65, 0x44, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f,
	0x64, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x65, 0x79,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x41, 0x6e, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x44, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x6a, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x08, 0x6a,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x4f, 0x6e, 0x12, 0x33, 0x0a, 0x12, 0x64, 0x75, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x3a, 0x05, 0x30, 0x2e, 0x30, 0x30, 0x31, 0x52, 0x10, 0x64, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x12, 0x4d, 0x0a, 0x0c,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b,
	0x68, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4f, 0x0a, 0x0d, 0x53,
	0x69, 0x7a, 0x65, 0x41, 0x6e, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x45, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x61, 0x79, 0x41, 0x6e, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x44, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x1a, 0x5b, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x42,
	0x70, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x03, 0x33, 0x30, 0x73, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x44, 0x75, 0x72,
	0x1a, 0x98, 0x03, 0x0a, 0x0b, 0x48, 0x74, 0x74, 0x70, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x2c, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52,
	0x0d, 0x75, 0x73, 0x65, 0x46, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x61, 0x6c, 0x66, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0e, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x48, 0x61, 0x6c, 0x66, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x6e, 0x12, 0x2a, 0x0a, 0x0f, 0x72, 0x65, 0x71,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x3a, 0x02, 0x33, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x44, 0x75, 0x72, 0x12, 0x33, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x49,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x54, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x3a, 0x00, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x30, 0x0a, 0x10, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x73, 0x2a, 0x3c, 0x0a, 0x0d, 0x4c,
	0x6f, 0x61, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08,
	0x4c, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x47,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x47, 0x5f, 0x53, 0x45,
	0x4d, 0x49, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x0c, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53,
	0x54, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x49, 0x53,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x49, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x44, 0x49, 0x53, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x49,
	0x41, 0x4c, 0x10, 0x03, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x75, 0x6c, 0x75, 0x79, 0x6f, 0x6c, 0x2f, 0x68, 0x65, 0x79, 0x70, 0x2d, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_heyp_proto_app_proto_rawDescOnce sync.Once
	file_heyp_proto_app_proto_rawDescData = file_heyp_proto_app_proto_rawDesc
)

func file_heyp_proto_app_proto_rawDescGZIP() []byte {
	file_heyp_proto_app_proto_rawDescOnce.Do(func() {
		file_heyp_proto_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyp_proto_app_proto_rawDescData)
	})
	return file_heyp_proto_app_proto_rawDescData
}

var file_heyp_proto_app_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_heyp_proto_app_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_heyp_proto_app_proto_goTypes = []interface{}{
	(LoadGenerator)(0),                          // 0: heyp.proto.LoadGenerator
	(Distribution)(0),                           // 1: heyp.proto.Distribution
	(*TestLopriClientConfig)(nil),               // 2: heyp.proto.TestLopriClientConfig
	(*FortioClientConfig)(nil),                  // 3: heyp.proto.FortioClientConfig
	(*TestLopriClientConfig_WorkloadStage)(nil), // 4: heyp.proto.TestLopriClientConfig.WorkloadStage
	(*FortioClientConfig_SizeAndWeight)(nil),    // 5: heyp.proto.FortioClientConfig.SizeAndWeight
	(*FortioClientConfig_DelayAndWeight)(nil),   // 6: heyp.proto.FortioClientConfig.DelayAndWeight
	(*FortioClientConfig_WorkloadStage)(nil),    // 7: heyp.proto.FortioClientConfig.WorkloadStage
	(*FortioClientConfig_HttpOptions)(nil),      // 8: heyp.proto.FortioClientConfig.HttpOptions
}
var file_heyp_proto_app_proto_depIdxs = []int32{
	0, // 0: heyp.proto.TestLopriClientConfig.load_gen:type_name -> heyp.proto.LoadGenerator
	4, // 1: heyp.proto.TestLopriClientConfig.workload_stages:type_name -> heyp.proto.TestLopriClientConfig.WorkloadStage
	7, // 2: heyp.proto.FortioClientConfig.workload_stages:type_name -> heyp.proto.FortioClientConfig.WorkloadStage
	5, // 3: heyp.proto.FortioClientConfig.size_dist:type_name -> heyp.proto.FortioClientConfig.SizeAndWeight
	6, // 4: heyp.proto.FortioClientConfig.delay_dist:type_name -> heyp.proto.FortioClientConfig.DelayAndWeight
	8, // 5: heyp.proto.FortioClientConfig.http_options:type_name -> heyp.proto.FortioClientConfig.HttpOptions
	1, // 6: heyp.proto.TestLopriClientConfig.WorkloadStage.interarrival_dist:type_name -> heyp.proto.Distribution
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_heyp_proto_app_proto_init() }
func file_heyp_proto_app_proto_init() {
	if File_heyp_proto_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_heyp_proto_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestLopriClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortioClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestLopriClientConfig_WorkloadStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortioClientConfig_SizeAndWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortioClientConfig_DelayAndWeight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortioClientConfig_WorkloadStage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FortioClientConfig_HttpOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyp_proto_app_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyp_proto_app_proto_goTypes,
		DependencyIndexes: file_heyp_proto_app_proto_depIdxs,
		EnumInfos:         file_heyp_proto_app_proto_enumTypes,
		MessageInfos:      file_heyp_proto_app_proto_msgTypes,
	}.Build()
	File_heyp_proto_app_proto = out.File
	file_heyp_proto_app_proto_rawDesc = nil
	file_heyp_proto_app_proto_goTypes = nil
	file_heyp_proto_app_proto_depIdxs = nil
}
