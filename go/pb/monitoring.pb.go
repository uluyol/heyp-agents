// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: heyp/proto/monitoring.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DebugAllocRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  string       `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Info       *AggInfo     `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	FlowAllocs []*FlowAlloc `protobuf:"bytes,3,rep,name=flow_allocs,json=flowAllocs,proto3" json:"flow_allocs,omitempty"`
	// If present, debug_states has the internal state of the allocator
	// when computing flow_allocs.
	DebugState *DebugAllocRecord_DebugState `protobuf:"bytes,4,opt,name=debug_state,json=debugState,proto3" json:"debug_state,omitempty"`
}

func (x *DebugAllocRecord) Reset() {
	*x = DebugAllocRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_monitoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugAllocRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugAllocRecord) ProtoMessage() {}

func (x *DebugAllocRecord) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_monitoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugAllocRecord.ProtoReflect.Descriptor instead.
func (*DebugAllocRecord) Descriptor() ([]byte, []int) {
	return file_heyp_proto_monitoring_proto_rawDescGZIP(), []int{0}
}

func (x *DebugAllocRecord) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *DebugAllocRecord) GetInfo() *AggInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DebugAllocRecord) GetFlowAllocs() []*FlowAlloc {
	if x != nil {
		return x.FlowAllocs
	}
	return nil
}

func (x *DebugAllocRecord) GetDebugState() *DebugAllocRecord_DebugState {
	if x != nil {
		return x.DebugState
	}
	return nil
}

type DebugAllocRecord_DebugState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Burstiness             float64 `protobuf:"fixed64,1,opt,name=burstiness,proto3" json:"burstiness,omitempty"`
	HipriBonus             int64   `protobuf:"varint,2,opt,name=hipri_bonus,json=hipriBonus,proto3" json:"hipri_bonus,omitempty"`
	LopriBonus             int64   `protobuf:"varint,3,opt,name=lopri_bonus,json=lopriBonus,proto3" json:"lopri_bonus,omitempty"`
	FracLopriInitial       float64 `protobuf:"fixed64,10,opt,name=frac_lopri_initial,json=fracLopriInitial,proto3" json:"frac_lopri_initial,omitempty"`
	FracLopriWithProbing   float64 `protobuf:"fixed64,11,opt,name=frac_lopri_with_probing,json=fracLopriWithProbing,proto3" json:"frac_lopri_with_probing,omitempty"`
	FracLopriPostPartition float64 `protobuf:"fixed64,12,opt,name=frac_lopri_post_partition,json=fracLopriPostPartition,proto3" json:"frac_lopri_post_partition,omitempty"`
	FracLopriFinal         float64 `protobuf:"fixed64,13,opt,name=frac_lopri_final,json=fracLopriFinal,proto3" json:"frac_lopri_final,omitempty"`
}

func (x *DebugAllocRecord_DebugState) Reset() {
	*x = DebugAllocRecord_DebugState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_monitoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugAllocRecord_DebugState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugAllocRecord_DebugState) ProtoMessage() {}

func (x *DebugAllocRecord_DebugState) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_monitoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugAllocRecord_DebugState.ProtoReflect.Descriptor instead.
func (*DebugAllocRecord_DebugState) Descriptor() ([]byte, []int) {
	return file_heyp_proto_monitoring_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DebugAllocRecord_DebugState) GetBurstiness() float64 {
	if x != nil {
		return x.Burstiness
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetHipriBonus() int64 {
	if x != nil {
		return x.HipriBonus
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetLopriBonus() int64 {
	if x != nil {
		return x.LopriBonus
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetFracLopriInitial() float64 {
	if x != nil {
		return x.FracLopriInitial
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetFracLopriWithProbing() float64 {
	if x != nil {
		return x.FracLopriWithProbing
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetFracLopriPostPartition() float64 {
	if x != nil {
		return x.FracLopriPostPartition
	}
	return 0
}

func (x *DebugAllocRecord_DebugState) GetFracLopriFinal() float64 {
	if x != nil {
		return x.FracLopriFinal
	}
	return 0
}

var File_heyp_proto_monitoring_proto protoreflect.FileDescriptor

var file_heyp_proto_monitoring_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x65, 0x79, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68,
	0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x68, 0x65, 0x79, 0x70, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x96, 0x04, 0x0a, 0x10, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x67, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x0b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x73, 0x12, 0x48, 0x0a, 0x0b, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x79, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x62, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xb8,
	0x02, 0x0a, 0x0a, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x62, 0x75, 0x72, 0x73, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0a, 0x62, 0x75, 0x72, 0x73, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x68, 0x69, 0x70, 0x72, 0x69, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x68, 0x69, 0x70, 0x72, 0x69, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x66, 0x72, 0x61, 0x63, 0x5f, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x5f, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x66, 0x72, 0x61,
	0x63, 0x4c, 0x6f, 0x70, 0x72, 0x69, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x35, 0x0a,
	0x17, 0x66, 0x72, 0x61, 0x63, 0x5f, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x62, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14,
	0x66, 0x72, 0x61, 0x63, 0x4c, 0x6f, 0x70, 0x72, 0x69, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x19, 0x66, 0x72, 0x61, 0x63, 0x5f, 0x6c, 0x6f, 0x70,
	0x72, 0x69, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x66, 0x72, 0x61, 0x63, 0x4c, 0x6f, 0x70,
	0x72, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x66, 0x72, 0x61, 0x63, 0x5f, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x5f, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x66, 0x72, 0x61, 0x63, 0x4c,
	0x6f, 0x70, 0x72, 0x69, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6c, 0x75, 0x79, 0x6f, 0x6c, 0x2f, 0x68,
	0x65, 0x79, 0x70, 0x2d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heyp_proto_monitoring_proto_rawDescOnce sync.Once
	file_heyp_proto_monitoring_proto_rawDescData = file_heyp_proto_monitoring_proto_rawDesc
)

func file_heyp_proto_monitoring_proto_rawDescGZIP() []byte {
	file_heyp_proto_monitoring_proto_rawDescOnce.Do(func() {
		file_heyp_proto_monitoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyp_proto_monitoring_proto_rawDescData)
	})
	return file_heyp_proto_monitoring_proto_rawDescData
}

var file_heyp_proto_monitoring_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_heyp_proto_monitoring_proto_goTypes = []interface{}{
	(*DebugAllocRecord)(nil),            // 0: heyp.proto.DebugAllocRecord
	(*DebugAllocRecord_DebugState)(nil), // 1: heyp.proto.DebugAllocRecord.DebugState
	(*AggInfo)(nil),                     // 2: heyp.proto.AggInfo
	(*FlowAlloc)(nil),                   // 3: heyp.proto.FlowAlloc
}
var file_heyp_proto_monitoring_proto_depIdxs = []int32{
	2, // 0: heyp.proto.DebugAllocRecord.info:type_name -> heyp.proto.AggInfo
	3, // 1: heyp.proto.DebugAllocRecord.flow_allocs:type_name -> heyp.proto.FlowAlloc
	1, // 2: heyp.proto.DebugAllocRecord.debug_state:type_name -> heyp.proto.DebugAllocRecord.DebugState
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_heyp_proto_monitoring_proto_init() }
func file_heyp_proto_monitoring_proto_init() {
	if File_heyp_proto_monitoring_proto != nil {
		return
	}
	file_heyp_proto_heyp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_heyp_proto_monitoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugAllocRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_monitoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugAllocRecord_DebugState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyp_proto_monitoring_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyp_proto_monitoring_proto_goTypes,
		DependencyIndexes: file_heyp_proto_monitoring_proto_depIdxs,
		MessageInfos:      file_heyp_proto_monitoring_proto_msgTypes,
	}.Build()
	File_heyp_proto_monitoring_proto = out.File
	file_heyp_proto_monitoring_proto_rawDesc = nil
	file_heyp_proto_monitoring_proto_goTypes = nil
	file_heyp_proto_monitoring_proto_depIdxs = nil
}
