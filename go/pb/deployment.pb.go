// This file contains definitions of all configuration protos.
// These messages should only be stored in textual or in-memory form (i.e. not
// the binary format), so feed free to change any field numbers.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: heyp/proto/deployment.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeployedNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ExternalAddr   *string `protobuf:"bytes,2,opt,name=external_addr,json=externalAddr" json:"external_addr,omitempty"`
	ExperimentAddr *string `protobuf:"bytes,3,opt,name=experiment_addr,json=experimentAddr" json:"experiment_addr,omitempty"`
	// Valid roles:
	// - host-agent
	// - cluster-agent
	// - testlopri-[name]-server
	// - testlopri-[name]-client
	// - fortio-[group]-envoy-proxy
	// - fortio-[group]-[name]-server
	// - fortio-[group]-[name]-client
	Roles []string `protobuf:"bytes,10,rep,name=roles" json:"roles,omitempty"`
}

func (x *DeployedNode) Reset() {
	*x = DeployedNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedNode) ProtoMessage() {}

func (x *DeployedNode) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedNode.ProtoReflect.Descriptor instead.
func (*DeployedNode) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *DeployedNode) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployedNode) GetExternalAddr() string {
	if x != nil && x.ExternalAddr != nil {
		return *x.ExternalAddr
	}
	return ""
}

func (x *DeployedNode) GetExperimentAddr() string {
	if x != nil && x.ExperimentAddr != nil {
		return *x.ExperimentAddr
	}
	return ""
}

func (x *DeployedNode) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type DeployedCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NodeNames        []string     `protobuf:"bytes,2,rep,name=node_names,json=nodeNames" json:"node_names,omitempty"`
	Limits           *AllocBundle `protobuf:"bytes,3,opt,name=limits" json:"limits,omitempty"`
	ClusterAgentPort *int32       `protobuf:"varint,4,opt,name=cluster_agent_port,json=clusterAgentPort" json:"cluster_agent_port,omitempty"`
}

func (x *DeployedCluster) Reset() {
	*x = DeployedCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedCluster) ProtoMessage() {}

func (x *DeployedCluster) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedCluster.ProtoReflect.Descriptor instead.
func (*DeployedCluster) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{1}
}

func (x *DeployedCluster) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployedCluster) GetNodeNames() []string {
	if x != nil {
		return x.NodeNames
	}
	return nil
}

func (x *DeployedCluster) GetLimits() *AllocBundle {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *DeployedCluster) GetClusterAgentPort() int32 {
	if x != nil && x.ClusterAgentPort != nil {
		return *x.ClusterAgentPort
	}
	return 0
}

type DeployedTestLopriInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node roles:
	// testlopri-[name]-client
	// testlopri-[name]-server
	Name            *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ServePort       *int32                 `protobuf:"varint,2,opt,name=serve_port,json=servePort" json:"serve_port,omitempty"`
	Client          *TestLopriClientConfig `protobuf:"bytes,3,opt,name=client" json:"client,omitempty"`
	NumClientShards *int32                 `protobuf:"varint,4,opt,name=num_client_shards,json=numClientShards,def=1" json:"num_client_shards,omitempty"`
	NumServerShards *int32                 `protobuf:"varint,5,opt,name=num_server_shards,json=numServerShards,def=1" json:"num_server_shards,omitempty"`
}

// Default values for DeployedTestLopriInstance fields.
const (
	Default_DeployedTestLopriInstance_NumClientShards = int32(1)
	Default_DeployedTestLopriInstance_NumServerShards = int32(1)
)

func (x *DeployedTestLopriInstance) Reset() {
	*x = DeployedTestLopriInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedTestLopriInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedTestLopriInstance) ProtoMessage() {}

func (x *DeployedTestLopriInstance) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedTestLopriInstance.ProtoReflect.Descriptor instead.
func (*DeployedTestLopriInstance) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{2}
}

func (x *DeployedTestLopriInstance) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployedTestLopriInstance) GetServePort() int32 {
	if x != nil && x.ServePort != nil {
		return *x.ServePort
	}
	return 0
}

func (x *DeployedTestLopriInstance) GetClient() *TestLopriClientConfig {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *DeployedTestLopriInstance) GetNumClientShards() int32 {
	if x != nil && x.NumClientShards != nil {
		return *x.NumClientShards
	}
	return Default_DeployedTestLopriInstance_NumClientShards
}

func (x *DeployedTestLopriInstance) GetNumServerShards() int32 {
	if x != nil && x.NumServerShards != nil {
		return *x.NumServerShards
	}
	return Default_DeployedTestLopriInstance_NumServerShards
}

type EnvoyAdmissionControlConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled           *bool    `protobuf:"varint,1,opt,name=enabled,def=0" json:"enabled,omitempty"`
	SamplingWindowSec *float64 `protobuf:"fixed64,2,opt,name=sampling_window_sec,json=samplingWindowSec,def=120" json:"sampling_window_sec,omitempty"`
	SuccessRateThresh *float64 `protobuf:"fixed64,3,opt,name=success_rate_thresh,json=successRateThresh,def=95" json:"success_rate_thresh,omitempty"` // don't activate unless SR < thresh
	Aggression        *float64 `protobuf:"fixed64,4,opt,name=aggression,def=1.5" json:"aggression,omitempty"`
	RpsThresh         *float64 `protobuf:"fixed64,5,opt,name=rps_thresh,json=rpsThresh,def=5" json:"rps_thresh,omitempty"`
	MaxRejectionProb  *float64 `protobuf:"fixed64,6,opt,name=max_rejection_prob,json=maxRejectionProb,def=80" json:"max_rejection_prob,omitempty"`
}

// Default values for EnvoyAdmissionControlConfig fields.
const (
	Default_EnvoyAdmissionControlConfig_Enabled           = bool(false)
	Default_EnvoyAdmissionControlConfig_SamplingWindowSec = float64(120)
	Default_EnvoyAdmissionControlConfig_SuccessRateThresh = float64(95)
	Default_EnvoyAdmissionControlConfig_Aggression        = float64(1.5)
	Default_EnvoyAdmissionControlConfig_RpsThresh         = float64(5)
	Default_EnvoyAdmissionControlConfig_MaxRejectionProb  = float64(80)
)

func (x *EnvoyAdmissionControlConfig) Reset() {
	*x = EnvoyAdmissionControlConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvoyAdmissionControlConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyAdmissionControlConfig) ProtoMessage() {}

func (x *EnvoyAdmissionControlConfig) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyAdmissionControlConfig.ProtoReflect.Descriptor instead.
func (*EnvoyAdmissionControlConfig) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{3}
}

func (x *EnvoyAdmissionControlConfig) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return Default_EnvoyAdmissionControlConfig_Enabled
}

func (x *EnvoyAdmissionControlConfig) GetSamplingWindowSec() float64 {
	if x != nil && x.SamplingWindowSec != nil {
		return *x.SamplingWindowSec
	}
	return Default_EnvoyAdmissionControlConfig_SamplingWindowSec
}

func (x *EnvoyAdmissionControlConfig) GetSuccessRateThresh() float64 {
	if x != nil && x.SuccessRateThresh != nil {
		return *x.SuccessRateThresh
	}
	return Default_EnvoyAdmissionControlConfig_SuccessRateThresh
}

func (x *EnvoyAdmissionControlConfig) GetAggression() float64 {
	if x != nil && x.Aggression != nil {
		return *x.Aggression
	}
	return Default_EnvoyAdmissionControlConfig_Aggression
}

func (x *EnvoyAdmissionControlConfig) GetRpsThresh() float64 {
	if x != nil && x.RpsThresh != nil {
		return *x.RpsThresh
	}
	return Default_EnvoyAdmissionControlConfig_RpsThresh
}

func (x *EnvoyAdmissionControlConfig) GetMaxRejectionProb() float64 {
	if x != nil && x.MaxRejectionProb != nil {
		return *x.MaxRejectionProb
	}
	return Default_EnvoyAdmissionControlConfig_MaxRejectionProb
}

type DeployedFortioInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Node roles:
	// fortio-[group]-[name]-server
	// fortio-[group]-[name]-client
	// fortio-[group]-envoy-proxy
	Group              *string             `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Name               *string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ServePorts         []int32             `protobuf:"varint,3,rep,name=serve_ports,json=servePorts" json:"serve_ports,omitempty"` // one server instance will be opened per port
	LbPolicy           *string             `protobuf:"bytes,4,opt,name=lb_policy,json=lbPolicy,def=ROUND_ROBIN" json:"lb_policy,omitempty"`
	MaxConnections     *int32              `protobuf:"varint,5,opt,name=max_connections,json=maxConnections,def=100000" json:"max_connections,omitempty"`
	MaxPendingRequests *int32              `protobuf:"varint,6,opt,name=max_pending_requests,json=maxPendingRequests,def=1000000" json:"max_pending_requests,omitempty"`
	MaxRequests        *int32              `protobuf:"varint,7,opt,name=max_requests,json=maxRequests,def=5000000" json:"max_requests,omitempty"`
	TimeoutSec         *float64            `protobuf:"fixed64,8,opt,name=timeout_sec,json=timeoutSec" json:"timeout_sec,omitempty"`
	Client             *FortioClientConfig `protobuf:"bytes,9,opt,name=client" json:"client,omitempty"`
}

// Default values for DeployedFortioInstance fields.
const (
	Default_DeployedFortioInstance_LbPolicy           = string("ROUND_ROBIN")
	Default_DeployedFortioInstance_MaxConnections     = int32(100000)
	Default_DeployedFortioInstance_MaxPendingRequests = int32(1000000)
	Default_DeployedFortioInstance_MaxRequests        = int32(5000000)
)

func (x *DeployedFortioInstance) Reset() {
	*x = DeployedFortioInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedFortioInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedFortioInstance) ProtoMessage() {}

func (x *DeployedFortioInstance) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedFortioInstance.ProtoReflect.Descriptor instead.
func (*DeployedFortioInstance) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{4}
}

func (x *DeployedFortioInstance) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *DeployedFortioInstance) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployedFortioInstance) GetServePorts() []int32 {
	if x != nil {
		return x.ServePorts
	}
	return nil
}

func (x *DeployedFortioInstance) GetLbPolicy() string {
	if x != nil && x.LbPolicy != nil {
		return *x.LbPolicy
	}
	return Default_DeployedFortioInstance_LbPolicy
}

func (x *DeployedFortioInstance) GetMaxConnections() int32 {
	if x != nil && x.MaxConnections != nil {
		return *x.MaxConnections
	}
	return Default_DeployedFortioInstance_MaxConnections
}

func (x *DeployedFortioInstance) GetMaxPendingRequests() int32 {
	if x != nil && x.MaxPendingRequests != nil {
		return *x.MaxPendingRequests
	}
	return Default_DeployedFortioInstance_MaxPendingRequests
}

func (x *DeployedFortioInstance) GetMaxRequests() int32 {
	if x != nil && x.MaxRequests != nil {
		return *x.MaxRequests
	}
	return Default_DeployedFortioInstance_MaxRequests
}

func (x *DeployedFortioInstance) GetTimeoutSec() float64 {
	if x != nil && x.TimeoutSec != nil {
		return *x.TimeoutSec
	}
	return 0
}

func (x *DeployedFortioInstance) GetClient() *FortioClientConfig {
	if x != nil {
		return x.Client
	}
	return nil
}

type DeployedFortioGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	EnvoyPort        *int32                       `protobuf:"varint,2,opt,name=envoy_port,json=envoyPort" json:"envoy_port,omitempty"`
	AdmissionControl *EnvoyAdmissionControlConfig `protobuf:"bytes,3,opt,name=admission_control,json=admissionControl" json:"admission_control,omitempty"`
}

func (x *DeployedFortioGroup) Reset() {
	*x = DeployedFortioGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedFortioGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedFortioGroup) ProtoMessage() {}

func (x *DeployedFortioGroup) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedFortioGroup.ProtoReflect.Descriptor instead.
func (*DeployedFortioGroup) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{5}
}

func (x *DeployedFortioGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeployedFortioGroup) GetEnvoyPort() int32 {
	if x != nil && x.EnvoyPort != nil {
		return *x.EnvoyPort
	}
	return 0
}

func (x *DeployedFortioGroup) GetAdmissionControl() *EnvoyAdmissionControlConfig {
	if x != nil {
		return x.AdmissionControl
	}
	return nil
}

type DeployedFortioConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvoyAdminPort  *int32                    `protobuf:"varint,1,opt,name=envoy_admin_port,json=envoyAdminPort" json:"envoy_admin_port,omitempty"`
	EnvoyNumThreads *int32                    `protobuf:"varint,2,opt,name=envoy_num_threads,json=envoyNumThreads,def=8" json:"envoy_num_threads,omitempty"`
	Groups          []*DeployedFortioGroup    `protobuf:"bytes,3,rep,name=groups" json:"groups,omitempty"`
	Instances       []*DeployedFortioInstance `protobuf:"bytes,4,rep,name=instances" json:"instances,omitempty"`
}

// Default values for DeployedFortioConfig fields.
const (
	Default_DeployedFortioConfig_EnvoyNumThreads = int32(8)
)

func (x *DeployedFortioConfig) Reset() {
	*x = DeployedFortioConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployedFortioConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployedFortioConfig) ProtoMessage() {}

func (x *DeployedFortioConfig) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployedFortioConfig.ProtoReflect.Descriptor instead.
func (*DeployedFortioConfig) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{6}
}

func (x *DeployedFortioConfig) GetEnvoyAdminPort() int32 {
	if x != nil && x.EnvoyAdminPort != nil {
		return *x.EnvoyAdminPort
	}
	return 0
}

func (x *DeployedFortioConfig) GetEnvoyNumThreads() int32 {
	if x != nil && x.EnvoyNumThreads != nil {
		return *x.EnvoyNumThreads
	}
	return Default_DeployedFortioConfig_EnvoyNumThreads
}

func (x *DeployedFortioConfig) GetGroups() []*DeployedFortioGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *DeployedFortioConfig) GetInstances() []*DeployedFortioInstance {
	if x != nil {
		return x.Instances
	}
	return nil
}

type DeploymentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes    []*DeployedNode    `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Clusters []*DeployedCluster `protobuf:"bytes,2,rep,name=clusters" json:"clusters,omitempty"`
	// Fields that are autofilled:
	// - cluster_agent_config.server.address (using clusters.cluster_agent_port)
	ClusterAgentConfig *ClusterAgentConfig `protobuf:"bytes,10,opt,name=cluster_agent_config,json=clusterAgentConfig" json:"cluster_agent_config,omitempty"`
	// Fields that are autofilled:
	// - host_agent_template.flow_state_reporter.this_host_addrs
	// - host_agent_template.daemon.cluster_agent_addr
	// - host_agent_template.dc_mapper
	HostAgentTemplate            *HostAgentConfig `protobuf:"bytes,11,opt,name=host_agent_template,json=hostAgentTemplate" json:"host_agent_template,omitempty"`
	HostAgentLogFineGrainedStats *bool            `protobuf:"varint,12,opt,name=host_agent_log_fine_grained_stats,json=hostAgentLogFineGrainedStats" json:"host_agent_log_fine_grained_stats,omitempty"`
	// Workloads to run (all are run in parallel).
	TestlopriInstances []*DeployedTestLopriInstance `protobuf:"bytes,13,rep,name=testlopri_instances,json=testlopriInstances" json:"testlopri_instances,omitempty"`
	Fortio             *DeployedFortioConfig        `protobuf:"bytes,14,opt,name=fortio" json:"fortio,omitempty"`
}

func (x *DeploymentConfig) Reset() {
	*x = DeploymentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heyp_proto_deployment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeploymentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeploymentConfig) ProtoMessage() {}

func (x *DeploymentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_heyp_proto_deployment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeploymentConfig.ProtoReflect.Descriptor instead.
func (*DeploymentConfig) Descriptor() ([]byte, []int) {
	return file_heyp_proto_deployment_proto_rawDescGZIP(), []int{7}
}

func (x *DeploymentConfig) GetNodes() []*DeployedNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *DeploymentConfig) GetClusters() []*DeployedCluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *DeploymentConfig) GetClusterAgentConfig() *ClusterAgentConfig {
	if x != nil {
		return x.ClusterAgentConfig
	}
	return nil
}

func (x *DeploymentConfig) GetHostAgentTemplate() *HostAgentConfig {
	if x != nil {
		return x.HostAgentTemplate
	}
	return nil
}

func (x *DeploymentConfig) GetHostAgentLogFineGrainedStats() bool {
	if x != nil && x.HostAgentLogFineGrainedStats != nil {
		return *x.HostAgentLogFineGrainedStats
	}
	return false
}

func (x *DeploymentConfig) GetTestlopriInstances() []*DeployedTestLopriInstance {
	if x != nil {
		return x.TestlopriInstances
	}
	return nil
}

func (x *DeploymentConfig) GetFortio() *DeployedFortioConfig {
	if x != nil {
		return x.Fortio
	}
	return nil
}

var File_heyp_proto_deployment_proto protoreflect.FileDescriptor

var file_heyp_proto_deployment_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x68, 0x65, 0x79, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x68,
	0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x68, 0x65, 0x79, 0x70, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x68, 0x65, 0x79, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x68, 0x65, 0x79, 0x70, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x86, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xe7,
	0x01, 0x0a, 0x19, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x4c,
	0x6f, 0x70, 0x72, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x39, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x70, 0x72, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x11, 0x6e, 0x75,
	0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x11, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x64, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x1b, 0x45, 0x6e, 0x76,
	0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x13, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x03, 0x31, 0x32, 0x30, 0x52, 0x11, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x65, 0x63, 0x12, 0x32,
	0x0a, 0x13, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x02, 0x39, 0x35, 0x52,
	0x11, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x03, 0x31, 0x2e, 0x35, 0x52, 0x0a, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0a, 0x72, 0x70, 0x73, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x01, 0x35, 0x52, 0x09,
	0x72, 0x70, 0x73, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x12, 0x6d, 0x61, 0x78,
	0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x02, 0x38, 0x30, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x62, 0x22, 0xfe, 0x02, 0x0a, 0x16,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x50, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x28, 0x0a, 0x09, 0x6c, 0x62, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x3a, 0x0b, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x52, 0x4f, 0x42, 0x49,
	0x4e, 0x52, 0x08, 0x6c, 0x62, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2f, 0x0a, 0x0f, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x06, 0x31, 0x30, 0x30, 0x30, 0x30, 0x30, 0x52, 0x0e, 0x6d, 0x61,
	0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x14,
	0x6d, 0x61, 0x78, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x07, 0x31, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x30, 0x52, 0x12, 0x6d, 0x61, 0x78, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x07, 0x35,
	0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x63, 0x12, 0x36, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x9e, 0x01, 0x0a,
	0x13, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e,
	0x76, 0x6f, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x64, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x10, 0x61, 0x64, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0xea, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x2d, 0x0a, 0x11, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x38, 0x52, 0x0f,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x4e, 0x75, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12,
	0x37, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x65,
	0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xf5, 0x03, 0x0a, 0x10, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2e, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x50, 0x0a, 0x14, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4b, 0x0a, 0x13, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x11, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x21, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6e, 0x65, 0x5f, 0x67,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1c, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x46, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x56, 0x0a, 0x13, 0x74, 0x65, 0x73, 0x74, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x68, 0x65, 0x79, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x54, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x70, 0x72, 0x69, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x6c, 0x6f, 0x70, 0x72, 0x69, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x79, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x46, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x74,
	0x69, 0x6f, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x75, 0x6c, 0x75, 0x79, 0x6f, 0x6c, 0x2f, 0x68, 0x65, 0x79, 0x70, 0x2d, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x62,
}

var (
	file_heyp_proto_deployment_proto_rawDescOnce sync.Once
	file_heyp_proto_deployment_proto_rawDescData = file_heyp_proto_deployment_proto_rawDesc
)

func file_heyp_proto_deployment_proto_rawDescGZIP() []byte {
	file_heyp_proto_deployment_proto_rawDescOnce.Do(func() {
		file_heyp_proto_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(file_heyp_proto_deployment_proto_rawDescData)
	})
	return file_heyp_proto_deployment_proto_rawDescData
}

var file_heyp_proto_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_heyp_proto_deployment_proto_goTypes = []interface{}{
	(*DeployedNode)(nil),                // 0: heyp.proto.DeployedNode
	(*DeployedCluster)(nil),             // 1: heyp.proto.DeployedCluster
	(*DeployedTestLopriInstance)(nil),   // 2: heyp.proto.DeployedTestLopriInstance
	(*EnvoyAdmissionControlConfig)(nil), // 3: heyp.proto.EnvoyAdmissionControlConfig
	(*DeployedFortioInstance)(nil),      // 4: heyp.proto.DeployedFortioInstance
	(*DeployedFortioGroup)(nil),         // 5: heyp.proto.DeployedFortioGroup
	(*DeployedFortioConfig)(nil),        // 6: heyp.proto.DeployedFortioConfig
	(*DeploymentConfig)(nil),            // 7: heyp.proto.DeploymentConfig
	(*AllocBundle)(nil),                 // 8: heyp.proto.AllocBundle
	(*TestLopriClientConfig)(nil),       // 9: heyp.proto.TestLopriClientConfig
	(*FortioClientConfig)(nil),          // 10: heyp.proto.FortioClientConfig
	(*ClusterAgentConfig)(nil),          // 11: heyp.proto.ClusterAgentConfig
	(*HostAgentConfig)(nil),             // 12: heyp.proto.HostAgentConfig
}
var file_heyp_proto_deployment_proto_depIdxs = []int32{
	8,  // 0: heyp.proto.DeployedCluster.limits:type_name -> heyp.proto.AllocBundle
	9,  // 1: heyp.proto.DeployedTestLopriInstance.client:type_name -> heyp.proto.TestLopriClientConfig
	10, // 2: heyp.proto.DeployedFortioInstance.client:type_name -> heyp.proto.FortioClientConfig
	3,  // 3: heyp.proto.DeployedFortioGroup.admission_control:type_name -> heyp.proto.EnvoyAdmissionControlConfig
	5,  // 4: heyp.proto.DeployedFortioConfig.groups:type_name -> heyp.proto.DeployedFortioGroup
	4,  // 5: heyp.proto.DeployedFortioConfig.instances:type_name -> heyp.proto.DeployedFortioInstance
	0,  // 6: heyp.proto.DeploymentConfig.nodes:type_name -> heyp.proto.DeployedNode
	1,  // 7: heyp.proto.DeploymentConfig.clusters:type_name -> heyp.proto.DeployedCluster
	11, // 8: heyp.proto.DeploymentConfig.cluster_agent_config:type_name -> heyp.proto.ClusterAgentConfig
	12, // 9: heyp.proto.DeploymentConfig.host_agent_template:type_name -> heyp.proto.HostAgentConfig
	2,  // 10: heyp.proto.DeploymentConfig.testlopri_instances:type_name -> heyp.proto.DeployedTestLopriInstance
	6,  // 11: heyp.proto.DeploymentConfig.fortio:type_name -> heyp.proto.DeployedFortioConfig
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_heyp_proto_deployment_proto_init() }
func file_heyp_proto_deployment_proto_init() {
	if File_heyp_proto_deployment_proto != nil {
		return
	}
	file_heyp_proto_app_proto_init()
	file_heyp_proto_config_proto_init()
	file_heyp_proto_heyp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_heyp_proto_deployment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedTestLopriInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvoyAdmissionControlConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedFortioInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedFortioGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployedFortioConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heyp_proto_deployment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeploymentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heyp_proto_deployment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_heyp_proto_deployment_proto_goTypes,
		DependencyIndexes: file_heyp_proto_deployment_proto_depIdxs,
		MessageInfos:      file_heyp_proto_deployment_proto_msgTypes,
	}.Build()
	File_heyp_proto_deployment_proto = out.File
	file_heyp_proto_deployment_proto_rawDesc = nil
	file_heyp_proto_deployment_proto_goTypes = nil
	file_heyp_proto_deployment_proto_depIdxs = nil
}
