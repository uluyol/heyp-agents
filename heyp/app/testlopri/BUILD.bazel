load("//bazel:cc_defs.bzl", "heyp_cc_binary")

heyp_cc_binary(
    name = "client",
    srcs = ["client.cc"],
    copts = ["-fno-strict-aliasing"],
    deps = [
        "//heyp/encoding:binary",
        "//heyp/host-agent:urls",
        "//heyp/init",
        "//heyp/proto:app_cc_proto",
        "//heyp/proto:fileio",
        "//heyp/stats:recorder",
        "//third_party/libuv",
        "@com_github_gflags_gflags//:gflags",
        "@com_google_absl//absl/functional:bind_front",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings:str_format",
        "//heyp/log",
    ],
)

heyp_cc_binary(
    name = "merge-logs",
    srcs = ["merge-logs.cc"],
    deps = [
        "//heyp/init",
        "//heyp/posix:strerror",
        "//heyp/proto:fileio",
        "//heyp/proto:stats_cc_proto",
        "//heyp/stats:hdrhistogram",
        "//heyp/stats:recorder",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
    ],
)

heyp_cc_binary(
    name = "mk-expected-interarrival-dist",
    srcs = ["mk-expected-interarrival-dist.cc"],
    deps = [
        "//heyp/init",
        "//heyp/proto:app_cc_proto",
        "//heyp/proto:fileio",
        "@com_github_gflags_gflags//:gflags",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
    ],
)

heyp_cc_binary(
    name = "mk-expected-tput",
    srcs = ["mk-expected-tput.cc"],
    deps = [
        "//heyp/init",
        "//heyp/proto:app_cc_proto",
        "//heyp/proto:fileio",
        "@com_github_gflags_gflags//:gflags",
        "@com_google_absl//absl/random",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/time",
    ],
)

heyp_cc_binary(
    name = "server",
    srcs = ["server.cc"],
    copts = ["-fno-strict-aliasing"],
    deps = [
        "//heyp/encoding:binary",
        "//third_party/libuv",
        "@com_google_absl//absl/strings:str_format",
    ],
)
