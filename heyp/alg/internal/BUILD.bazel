load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(
    default_visibility = ["//heyp/alg:__subpackages__"],
)

cc_library(
    name = "downgrade-selector-iface",
    hdrs = ["downgrade-selector-iface.h"],
    deps = [
        "//heyp/alg:agg-info-views",
        "//heyp/log:spdlog",
    ],
)

cc_library(
    name = "downgrade-selector-hashing",
    srcs = [
        "downgrade-selector-hashing.cc",
    ],
    hdrs = [
        "downgrade-selector-hashing.h",
    ],
    deps = [
        ":downgrade-selector-iface",
        ":formatters",
        ":hash-ring",
        "//heyp/alg:debug",
        "//heyp/alg:flow-volume",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "downgrade-selector-heyp-sigcomm-20",
    srcs = [
        "downgrade-selector-heyp-sigcomm-20.cc",
    ],
    hdrs = [
        "downgrade-selector-heyp-sigcomm-20.h",
    ],
    deps = [
        ":downgrade-selector-iface",
        ":formatters",
        ":greedy-assign",
        "//heyp/alg:debug",
        "//heyp/alg:flow-volume",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "downgrade-selector-knapsack-solver",
    srcs = [
        "downgrade-selector-knapsack-solver.cc",
    ],
    hdrs = [
        "downgrade-selector-knapsack-solver.h",
    ],
    deps = [
        ":downgrade-selector-iface",
        ":formatters",
        "//heyp/alg:debug",
        "//heyp/alg:flow-volume",
        "@com_google_absl//absl/strings",
        "@com_google_ortools//ortools/algorithms:knapsack_solver_lib",
    ],
)

cc_library(
    name = "downgrade-selector-largest-first",
    srcs = [
        "downgrade-selector-largest-first.cc",
    ],
    hdrs = [
        "downgrade-selector-largest-first.h",
    ],
    deps = [
        ":downgrade-selector-iface",
        ":formatters",
        ":greedy-assign",
        "//heyp/alg:debug",
        "//heyp/alg:flow-volume",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "formatters",
    hdrs = ["formatters.h"],
    deps = [
        "//heyp/proto:formatter",
    ],
)

cc_library(
    name = "hash-ring",
    srcs = ["hash-ring.cc"],
    hdrs = ["hash-ring.h"],
    deps = [
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "greedy-assign",
    hdrs = ["greedy-assign.h"],
    deps = [
        "//heyp/alg:agg-info-views",
        "//heyp/alg:flow-volume",
    ],
)

cc_test(
    name = "hash-ring-test",
    srcs = ["hash-ring-test.cc"],
    deps = [
        ":hash-ring",
        "//heyp/init:test-main",
    ],
)

cc_test(
    name = "greedy-assign-test",
    srcs = ["greedy-assign-test.cc"],
    deps = [
        ":greedy-assign",
        "//heyp/init:test-main",
        "@com_google_absl//absl/functional:bind_front",
    ],
)
